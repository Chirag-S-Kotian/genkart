# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - LICENSE
      - README.md
      - readme-assets/**
      - .gitignore
      - terraform/**
      - argocd/**
      - helm/**
      - .github/workflows/**
      - build-and-push.sh
  pull_request:
    branches: [main]
    paths-ignore:
      - LICENSE
      - README.md
      - readme-assets/**
      - .gitignore
      - terraform/**
      - argocd/**
      - helm/**
      - .github/workflows/**
      - build-and-push.sh

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    if: >
      github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build client image
        run: docker build -f client/next.dockerfile -t client:latest ./client

      - name: Build server image
        run: docker build -f server/node.dockerfile -t server:latest ./server

      - name: Trivy scan client
        uses: aquasecurity/trivy-action@v0.22.0
        with:
          image-ref: 'client:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      - name: Trivy scan server
        uses: aquasecurity/trivy-action@v0.22.0
        with:
          image-ref: 'server:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    if: >
      github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }} # Remove if self-hosted SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  docker-build-push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    continue-on-error: true
    if: >
      github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/next.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gen-client:latest

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/node.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gen-serv:latest

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
